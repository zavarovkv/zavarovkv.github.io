Документация по партнерскому API gds

Партнерский API предназначен для автоматизированного обмена данными между продавцами и goods. API служит для управления заказами, оформленными покупателями на маркетплейсе goods.

Документ предназначен для разработчиков приложений. В документе приведены примеры запросов и ответов с демонстрационными данными.

1. Как подключиться по API (#how_to_connect)
2. Описание API (#api)
3. Процесс обработки заказов продавцом по API (#how_to)
   - Шаг 1 — Размещение товарных предложений на goods (#step1)
   - Шаг 2 —  Подтверждение нового заказа (#step2)
   - Шаг 3 —  Комплектация заказа для отгрузки (#step3)
   - Шаг 4 —  Отгрузка заказа (#step4)
4. Загрузка прайс-листа в формате YML (#yml)
5. Требования к маркировочному листу (#label_info)
6. Требования к реестру отгрузки (#registry_info)
7. Вопросы и ответы (#faq)

----
<a name="how_to_connect"></a>
Как подключиться по API
Для использования API продавец должен выполнить шаги:
Шаг 1 — Зарегистрируйтесь в goods (https://goods.ru/inviteshop/) и получите доступ к личному кабинету продавца (partner.goods.ru)

Шаг 2 — Настройте интеграцию по API в личном кабинете (https://partner.goods.ru/merchant-app/account/api-integration)
Шаг 3 — Получите авторизационный токен в личном кабинете (https://partner.goods.ru/merchant-app/account/api-integration)

Шаг 4 — Получите уникальный идентификатор магазина (у менеджеров goods)
Шаг 5 — Используйте токен и идентификатор при вызове методов API

----
<a name="api"></a>
Описание API
Подробная спецификация доступна по ссылке (/api.html)
<a name="methods"></a>
Справочник методов
Запросы к goods
- POST /order/confirm (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1confirm%2Fpost) — подтверждение заказа
- POST /order/packing (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1packing%2Fpost) — комплектация заказа
- POST /order/shipping (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1shipping%2Fpost) — отгрузка заказа
- POST /order/reject (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1reject%2Fpost) — отмена заказа продавцом
- POST /order/search (#) — получение списка заказов, удовлетворяющих заданному фильтру
- POST /order/get (#) — получение детальной информации по заказу
Запросы к продавцу
- POST /order/new (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1new%2Fpost) — создание заказа
- POST /order/cancel (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1cancel%2Fpost) — отмена заказа покупателем
- POST /order/labelUpdate (#) — изменение маркировочного листа

----
<a name="how_to"></a>
Процесс обработки заказов продавцом по API
Продавец публикует товарные предложения на goods через прайс-лист в формате YML. Покупатель заинтересовавшись выгодным предложением оформляет заказ. После получения заказа продавец подтверждает возможность его отгрузки в указанные сроки, выполняет комплектацию и отгрузку. Базовый сценарий вызовов API-методов изображен ниже.


Рассмотрим выполнение каждого из шагов более детально.

----
<a name="step1"></a>
Шаг 1 — Размещение товарных предложений на goods
Для размещения товарных предложений для продажи на маркетплейсе goods необходимо сформировать прайс-лист в формате YML (подробнее о прайс-листе (#yml)).

Товарные предложения описываются характеристиками:
- наименование / описание товара;
  - цена;
  - наличие товара на складе;
  - возможные сроки отгрузки;
  - НДС.

  Пример описания товарных предложений в прайс-листе
  <script src="https://gist.github.com/zavarovkv/7eb65b1b4014e7de8e0f4fa9d785811d.js"></script>

----
<a name="step2"></a>
Шаг 2 —  Подтверждение нового заказа
1. Процесс подтверждения нового заказа (#step2_example)
2. Последовательность обращений по API (#step2_api)
3. Примеры вызовов API (#1)

<a name="step2_process"></a>
2.1 Процесс подтверждения нового заказа
Рассмотрим пример, когда покупатель оформляет заказ состоящий из трех позиций: телефон, планшет, корм для питомца. Телефон и планшет  покупается у ’Продавец 1’, а корм для питомца у ’Продавец 2’. Goods сообщает каждому продавцу про его часть заказа.


Продавец, получив новый заказ от goods проверяет доступное кол-во остатков по каждой позиции в заказе и дает свое согласие об отгрузке заказа в указанный срок.


<a name="step2_api"></a>
2.2 Последовательность обращений по API
1. После оформления покупателем нового заказа, goods передает информацию по заказу продавцу вызовом метода POST order/new (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1new%2Fpost), который должен быть реализован на стороне продавца. 
   - В объекте items передается информация по каждому товару в заказе. Элемент itemIndex идентифицирует товар и дальнейшее общение с goods по товарам выполняется через itemIndex.
   - В объекте label передается информация необходимая для добавления в шаблон маркировочного листа (подробнее о маркировочном листе (#label_info)).
   - В элементе shippingDate передается дата и время отгрузки заказа, до оторой продавец обязуется отгрузить заказ. Для того, чтобы доставить заказ покупателю в запланированную дату доставки.
2. Продавец обязуется в течение 3 часов с момента получения заказа сообщить свое решение goods об отгрузки. Решение о подтверждении ожидается по каждому товару в заказе. Сообщается вызовом методов POST order/confirm (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1confirm%2Fpost) и POST order/reject (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1reject%2Fpost).
   По результатам подтверждения заказа, клиент получит СМС-уведомление о подтверждении заказа продавцом.


<a name="step2_examples"></a>
2.3 Примеры вызовов API
Goods передает продавцу заказ с двумя товарами
<script src="https://gist.github.com/zavarovkv/8562fbb4883462f464f9c2e6c0d9f7e1.js"></script>
Продавец подтверждает заказ
<script src="https://gist.github.com/zavarovkv/d140efca93653877f837a656ec51e365.js"></script>
Продавец частично подтверждает заказ
<script src="https://gist.github.com/zavarovkv/17f795d0d4ab79c0004fe69b50ad606a.js"></script>
<script src="https://gist.github.com/zavarovkv/80a21b556c3f0ebe6f39f585534b7377.js"></script>
Продавец отклоняет заказ
<script src="https://gist.github.com/mflw/ad97f6b6da0344552132a5640da10aa7.js"></script>

----
<a name="step3"></a>
Шаг 3 — Комплектация заказа для отгрузки
1. Процесс комплектации заказа (#step2_example)
2. Последовательность обращений по API (#step2_api)
3. Примеры вызовов API (#1)

<a name="step3_process"></a>
3.1 Процесс комплектации заказа
После подтверждения заказа, продавец собирает его и  упаковывает. Сборка заказа может осуществляться в одно или несколько грузовых мест, для каждого грузового места распечатывается маркировочный лист с уникальным штрих-кодом (подробнее о маркировочном листе (#label_info)) и наклеивается на упаковку.

Продавец сообщает goods об успешной комплектации заказа для того, чтобы goods смог передать информацию о заказе на Сортировочный Центр. После завершения комплектации заказ  ожидает отгрузки на складе продавца.


<a name="step3_api"></a>
3.2 Последовательность обращений по API
1. Комплектация заказа должна быть выполнена продавцом до окончания времени на отгрузку заказа (передается в запросе  POST order/new (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1new%2Fpost) в элементе shippingDate.
2. Продавец должен передать в вызове метода POST order/packing (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1packing%2Fpost) номер заказа goods по скомплектованному заказу. Кроме того, сообщить информацию по грузовым местам, в которые укомплектованы товары. При этом:
   - несколько товаров могут быть скомплектованы в одно грузовое место (см. пример);
   - несколько товаров могут быть скомплектованы в разные грузовые места (см. пример);
   - один товар может занимать несколько грузовых мест (см. пример).
3. Решение о комплектации ожидается по каждому товару в заказе. Сообщается вызовом методов POST order/packing (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1packing%2Fpost) и POST order/reject (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1reject%2Fpost).


<a name="step3_example"></a>
3.3 Примеры вызовов API
Продавец комплектует заказ в одно грузовое место
<script src="https://gist.github.com/mflw/f4a8f66ddfd98a86e95af78a7fe1c746.js"></script>
Продавец комплектует заказ в разные грузовые места
<script src="https://gist.github.com/mflw/d7bce4b6027bceff9de02abe73ac642a.js"></script>
Продавец комплектует товар в заказе в два грузовых места 
Продавец частично комплектует заказ
<script src="https://gist.github.com/zavarovkv/80a21b556c3f0ebe6f39f585534b7377.js"></script>
<script src="https://gist.github.com/zavarovkv/80a21b556c3f0ebe6f39f585534b7377.js"></script>
Продавец отклоняет заказ
<script src="https://gist.github.com/mflw/ad97f6b6da0344552132a5640da10aa7.js"></script>

----
<a name="step4"></a>
Шаг 4 —  Отгрузка заказа
1. Процесс отгрузки заказа (#step2_example)
2. Последовательность обращений по API (#step2_api)
3. Примеры вызовов API (#1)
    
<a name="step4_process"></a>
4.1 Процесс отгрузки заказа
В согласованное время на склад продавца приезжает водитель-курьер логистического оператора для забора груза. Продавец распечатывает Реестр отгрузки(подробнее о реестре отгрузки (#registry_info)) с перечнем грузовых мест и передает реестр отгрузки и скомплектованный товар курьеру логистического оператора.

На Сортировочном Центре выполняется объединение заказов от разных продавцов в единый заказ для покупателя. В согласованное с покупателем время заказ доставляется покупателю.


<a name="step4_api"></a>
4.2 Последовательность обращений по API
После физической отгрузки товара курьеру логистической службы goods, продавец передает об этом информацию через вызов метода POST order/shipping (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1shipping%2Fpost).
1. Отгрузка заказа должна быть выполнена продавцом до окончания времени на отгрузку заказа (передается в запросе  POST order/new (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1new%2Fpost) в элементе shippingDate.
2. Продавец должен передать в вызове метода POST order/shipping (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1shipping%2Fpost) номера отгруженных грузовых мест.
3. Решение об отгрузке ожидается по каждому грузовому месту в заказе.


<a name="step4_example"></a>
4.3 Примеры вызовов API
Продавец отгружает заказ
<script src="https://gist.github.com/mflw/7080cbe5d5624193a0420a061bc99547.js"></script>
Продавец частично отгружает заказ
<script src="https://gist.github.com/mflw/1f3f0fe320537098cfb6276214d98b40.js"></script>
Продавец отклоняет заказ
<script src="https://gist.github.com/mflw/ad97f6b6da0344552132a5640da10aa7.js"></script>

----
<a name="yml"></a>
Загрузка прайс-листа в формате YML

----
<a name="label_info"></a>
Требования к маркировочному листу
Скачать шаблон маркировочного листа (/templates/label.html)
Маркировочный лист наклеивается на грузовое место в момент комплектации заказа. Изображение маркировочного листа и описание см. ниже.

1. Штрих-код в формате Code 128 (подробнее о формате (https://ru.wikipedia.org/wiki/Code_128))
   Представляет собой закодированный идентификатор грузового места. Используется для распознавания грузового места на Сортировочном Центре goods.
2. Идентификатор грузового места
   Уникальный идентификатор, однозначно идентифицирующий грузовое место продавца. 
   Формируется по шаблону: {Идентификатор продавца}*{Номер заказа продавца}*{Номер грузового места}
   Например, 
   7*73606159*1, где:
   7 — идентификатор продавца,
   73606159 — номер заказа продавца,
   1 — идентификатор грузового места.
3. Юр. наименование продавца
   Полное юридическое наименование продавца.
4. Идентификатор продавца
   Уникальный идентификатор продавца, выдается goods в момент регистрации личного кабинета.
5. Адрес доставки
   Адрес доставки
6. ФИО получателя
   ФИО получателя
7.  Номер доставки
   Номер доставки goods
8. Номер отправления
   Номер заказа продавца
9. Дата доставки
   Дата доставки заказа покупателю
10. Логотип goods
    Логотип goods

----
<a name="registry_info"></a>
Требования к реестру отгрузки
Реестр отгрузки передается продавцом курьеру логистической службы вместе с грузовыми местами. Реестр должен содержать перечень всех передаваемых курьеру грузовых мест. Изображение реестра отгрузки и описание полей см. ниже.

1. Номер доставки
   Номер доставки goods, получить можно из элемента label / deleveryIdинформации по заказу в запросе POST order/new (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1new%2Fpost).
2. Номер отправления goods
   Номер заказа goods, получить можно из элемента shipmentId запроса POST order/new (/api.html#tag/Upravlenie-zakazami%2Fpaths%2F~1order~1new%2Fpost).
3. Номер отправления продавца с префиксом
   Идентификатор, формирующийся по шаблону: {Идентификатор продавца}*{Номер заказа продавца}
   Например,
   7*73606159, где:
   7 — идентификатор продавца,
   73606159 — номер заказа продавца,
4. Количество мест
   Кол-во грузовых мест в заказе
5. Номер места продавца
   Для каждого из грузового места передается идентификатор грузового места, однозначно идентифицирующий грузовое место продавца. 
   Формируется по шаблону: {Идентификатор продавца}*{Номер заказа продавца}*{Номер грузового места}
   Например, 
   7*73606159*1, где:
   7 — идентификатор продавца,
   73606159 — номер заказа продавца,
   1 — идентификатор грузового места.
6. Объявленная стоимость места, руб

7. Объявленная стоимость отправления, руб


----
<a name="faq"></a>
Вопросы и ответы
- Будет ли вызван метод order/cancel при отмене покупателем всего заказа?
  Да. Метод order/cancel будет вызван по каждой позиции в заказе.
- Нужно ли вызывать метод order/reject, если закончились доступные остатки по каким-то позициям в заказе?
  Да, метод order/reject необходимо вызывать во всех случаях, когда продавец хочет сообщить Goods, что не можете выполнить заказ. Например, если закончились доступные остатки.

  Я не нашел ответ на свой вопрос (#help)
----
Редакция от 26.02.2018 12:12