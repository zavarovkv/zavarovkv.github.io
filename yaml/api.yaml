swagger: "2.0"
info:
  version: "2.0"
  title: Партнерский API goods
  contact:
    name: Константин Заваров
    email: konstantin.zavarov@goods.ru
    url: https://goods.ru
host: partner.goods.ru

basePath: /api/market/v2/orderService/
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

tags:
  - name: Введение
    description: |
      Документ содержит описание __Partner API__, предназначенного для взаимодействия __goods__ с системой учета заказов на стороне продавцов.

      ### Схема
      При работе с API рекомендуется использовать __версию v2__. Предыдущие версии API сохранены для совместимости и не рекомендуются к использованию.
      Запросы для __прод__. среды необходимо отправлять по адресу:
      ```
      https://partner.goods.ru/api/market/v2/orderService/
      ```
      Запросы для **тестовой** среды необходимо отправлять по адресу:
      ```
      https://test-partner.goods.ru/api/market/v2/orderService/
      ```

      ### Кодировка
      Данные принимаются и передаются __только__ в кодировке __UTF-8__.

      ### Безопасность
      Доступ осуществляется __только__ через защищенное соединение по протоколу __HTTPS__.

      ### Дата и время
      Дата и время принимаются и передаются в формате [ISO RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14): &nbsp;
      <span style="white-space: nowrap;">`YYYY-MM-DDTHH:MM:SS+HHMM`</span>.

      ### Формат данных
      Данные прнимаются и возвращаются в формате __JSON API__. Рекомендуем ознакомиться со [спецификацией](http://jsonapi.org/).

      В запросах необходимо явно указывать заголовки: `Accept` и `Content-Type`
      со значением
      <span style="white-space: nowrap;">`application/vnd.api+json`</span>
      
  - name: Аутентификация
    description: |
      Во всех POST-запросах передается ключ аутентификации через параметр
      `token`.

      Пример исходящих данных для метода `POST /order/get` (получение подробной информации по заказам)::

      ```
      meta {},
      data {
        "token": "53aa3d6a-baf6-4787-8e8c-b54bc2609b8d",
        "shipments": [
            "81234567890",
            "81234567891"
          ]
      }
      ```

  - name: Обработка ошибок
    description: |
      При обращении к API могут допускаться ошибки, о чем система будет сообщать. В параметре __success__ будет возвращено значение __0__. Элемент __error__ будет содержать подробную информацию об ошибке. 
      __Важно:__ и в случае успешного выполнения запроса, и в случае ошибочно сформированного запроса, сервер вернет статус __200 OK__.

      ```
      HTTP/1.1 200 OK
      {
        "success": 0,
        "error": {
          "message": "No valid token",
          "code": "0"
        }
      }
      ```

  - name: Управление заказами
    description: Все про управление заказами


paths:

  /order/new:
    post:
      tags:
        - Управление заказами
      summary: Создание заказа
      description: |
        `Метод вызывается goods` после оформления нового заказа покупателем на сайте. 
        Предназначен для передачи созданного заказа в систему обработки заказов продавца.

        Информация передаваемая продавцу по заказу включает:
        
        * детальную информацию по каждой позиции в заказе;
        * информацию для печати маркировочного листа ([подробнее о маркировочном листе]);
        * максимально возможный срок отгрузки заказа.
      
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              meta:
                type: object
                description: Блок вспомогательных данных
              data:
                type: object
                description: Блок информационных данных
                properties:
                  token:
                    type: string
                    description: Аутентификационный токен
                  shopments:
                    type: array
                    description: Список заказов
                    items:
                      type: object
                      properties:
                        shipmentId:
                          type: string
                          description: Уникальный идентификатор заказа Goods
                        shipmentDate:
                          type: string
                          description: Дата и время создания заказа
                        items:
                          type: array
                          description: Список позиций в заказе
                          items: 
                            type: object
                            properties:
                              itemIndex:
                                type: string
                                description: Уникальный номер позиции в рамках заказа, нумерация начинается с 0
                              offerId:
                                type: string
                                description: Идентификатор оффера (товарного предложения) продавца передаваемый в прайс-листе в параметре id элемента <offer>
                              price:
                                type: string
                                description: Цена позиции из прайс-листа продавца
                              finalPrice:
                                type: string
                                description: Цена позиции за вычетом всех скидок
                              discounts:
                                type: object
                                description: Список примененных скидок к текущей позиции
                                properties:
                                  discountType:
                                    type: string
                                    description: |
                                      Тип скидки.
                                      
                                      |    Значание    |               Описание                                                     |
                                      | :------------- | :------------------------------------------------------------------------- |
                                      | `LOY`          | Программа Лояльности (снижение цены на товар за счет бонусных рублей)      |
                                      | `BPG`          | BPG - Гарантия Лучшей Цены (снижение цены на товар до минимльной на рынке) |
                                      | `BPG20`        | аналогично BPG                                                             |

                                  discountAmount:
                                    type: string
                                    description: Сумма скидки
                        label:
                          type: object
                          description: Информация для печати маркировочного листа
                          properties:
                            deliveryId:
                              type: string
                              description: Индентификатор доставки. Печатается на маркировочном листе
                            region:
                              type: string
                              description: Регион адреса получателя. Печатается на маркировочном листе
                            city:
                              type: string
                              description: Город адреса получателя. Печатается на маркировочном листе
                            address:
                              type: string
                              description: Адрес получателя. Печатается на маркировочном листе
                            buyerFullName:
                              type: string
                              description: ФИО получателя. Печатается на маркировочном листе
                            merchantId:
                              type: string
                              description: Уникальный идентификатор продавца. Печатается на маркировочном листе
                            merchantName:
                              type: string
                              description: Юр. наименование продавца. Печатается на маркировочном листе
                            labelText:
                              type: string
                              description: Шаблон маркировочного листа в формате HTML
                        shipping:
                          type: object
                          description: Дополнительная информация об отгрузке
                          properties:
                            shippingDate:
                              type: string
                              description: Максимально возможный срок на отгрузку заказа продавцом. Если заказ НЕ будет отгружен до указанного срока, то он считается отмененным продавцом (взымается штрафная комиссия)
          examples:
            application/json:
              data:
                token: d41d8cd98f00b204e9800998ecf8427e

  /orders/{id}:
    get:
      tags:
        - Заказы
      summary: Поиск заказа по ID
      parameters:
        - $ref: "#/parameters/includeInOrder"
        - $ref: "#/parameters/resourceId"
      responses:
        200:
          $ref: "#/responses/OrderResponse"
        404:
          $ref: "#/responses/NotFoundErrorResponse"

    put:
      tags:
        - Заказы
      summary: Обновление заказа по ID
      description: |
        Если заказ с указанным ID не найден, то создается новый заказ с `number` равным ID.

        Обновление объекта `details`:

          * новые параметры добавляются
          * существующие обновляются

        Обновление объектов в: `order_lines`:

          * полностью заменяется новым содержимым

      parameters:
        - $ref: "#/parameters/resourceId"
        - in: body
          name: body
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Order"
      responses:
        201:
          $ref: "#/responses/OrderCreatedResponse"
        200:
          $ref: "#/responses/OrderUpdatedResponse"

    delete:
      tags:
        - Заказы
      summary: Удаление заказа по ID
      parameters:
        - $ref: "#/parameters/resourceId"
      responses:
        204:
          description: Успешное удаление заказа
        404:
          $ref: "#/responses/NotFoundErrorResponse"

  /products:
    get:
      tags:
        - Продукты
      summary: Cписок продуктов
      parameters:
        - $ref: "#/parameters/includeInProduct"
        - $ref: "#/parameters/sortCollection"
        - $ref: "#/parameters/pageNumber"
        - $ref: "#/parameters/perPage"
      responses:
        200:
          $ref: "#/responses/ProductCollectionResponse"

  /products/{id}:
    get:
      tags:
        - Продукты
      summary: Поиск продукта по ID
      parameters:
        - $ref: "#/parameters/includeInProduct"
        - $ref: "#/parameters/resourceId"
      responses:
        200:
          $ref: "#/responses/ProductResponse"
        404:
          $ref: "#/responses/NotFoundErrorResponse"

    put:
      tags:
        - Продукты
      summary: Обновление продукта по ID
      description: |
        Обновление объекта `custom_attributes`:

          * новые параметры добавляются
          * существующие обновляются

      parameters:
        - $ref: "#/parameters/resourceId"
        - in: body
          name: body
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Product"
      responses:
        200:
          $ref: "#/responses/ProductUpdatedResponse"

    delete:
      tags:
        - Продукты
      summary: Удаление продукта по ID
      parameters:
        - $ref: "#/parameters/resourceId"
      responses:
        204:
          description: Успешное удаление продукта
        404:
          $ref: "#/responses/NotFoundErrorResponse"

  /consumers:
    post:
      tags:
        - Клиенты
      summary: Создание клиента
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Consumer"

      responses:
        201:
          $ref: "#/responses/ConsumerCreatedResponse"
        422:
          $ref: "#/responses/ValidationErrorResponse"

    get:
      tags:
        - Клиенты
      summary: Cписок клиентов
      parameters:
        - $ref: "#/parameters/includeInConsumer"
        - $ref: "#/parameters/filterInConsumer"
        - $ref: "#/parameters/sortCollection"
        - $ref: "#/parameters/pageNumber"
        - $ref: "#/parameters/perPage"
      responses:
        200:
          $ref: "#/responses/ConsumerCollectionResponse"

  /consumers/{id}:
    get:
      tags:
        - Клиенты
      summary: Поиск клиента по ID
      parameters:
        - $ref: "#/parameters/includeInConsumer"
        - $ref: "#/parameters/resourceId"
      responses:
        200:
          $ref: "#/responses/ConsumerResponse"
        404:
          $ref: "#/responses/NotFoundErrorResponse"

    put:
      tags:
        - Клиенты
      summary: Обновление клиенты по ID
      description: |
        Если клиент с указанным ID не найден, то создается новый клиент с `external_id` равным ID.

        Обновление объекта `custom_attributes`:

          * новые параметры добавляются
          * существующие обновляются

      parameters:
        - $ref: "#/parameters/resourceId"
        - in: body
          name: body
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Consumer"
      responses:
        201:
          $ref: "#/responses/ConsumerCreatedResponse"
        200:
          $ref: "#/responses/ConsumerUpdatedResponse"

    delete:
      tags:
        - Клиенты
      summary: Удаление клиента по ID
      parameters:
        - $ref: "#/parameters/resourceId"
      responses:
        204:
          description: Успешное удаление клиента
        404:
          $ref: "#/responses/NotFoundErrorResponse"

  /survey_responses:
    get:
      tags:
        - Опросы
      summary: Cписок ответов на опросы
      parameters:
        - $ref: "#/parameters/includeInSurveyResponse"
        - $ref: "#/parameters/filterInSurveyResponse"
        - $ref: "#/parameters/sortCollection"
        - $ref: "#/parameters/pageNumber"
        - $ref: "#/parameters/perPage"
      responses:
        200:
          $ref: "#/responses/SurveyResponseCollectionResponse"


responses:
  NotFoundErrorResponse:
    description: Объект не найден
    schema:
      $ref: "#/definitions/Error"

  ValidationErrorResponse:
    description: Ошибка валидации
    schema:
      $ref: "#/definitions/Error"

  # ---------------------------
  # Reviews responses
  # ---------------------------
  ReviewCollectionResponse:
    description: Список отзывов
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/definitions/PersistedReview"
        included:
          description: Зависимые объекты, указанные в параметре `include`
          type: array
          items: []

  ReviewCreatedResponse:
    description: Отзыв успешно создан
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedReview"

  ReviewUpdatedResponse:
    description: Отзыв успешно обновлен
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedReview"


  ReviewResponse:
    description: Отзыв
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedReview"
        included:
          description: Зависимые объекты, указанные в параметре `include`
          type: array
          items: []
    examples:
      application/json:
        data:
          id: d41d8cd98f00b204e9800998ecf8427e
          type: reviews
          attributes:
            pros: Одни преимущества
            cons: Отсутствуют
            body: Спасибо за платье! Отлично держит, приятное к телу, в общем супер! Завтра приеду за еще одним платьем! А может и двумя! Впереди юбилей и очередная свадьба))))) Спасибо большое! Буду заказывать еще обязательно!"
            rating: 5
            external_id: review-34772
            created_at: 2016-04-12T23:20:50.52Z
            updated_at: 2016-04-12T23:20:50.52Z
            author_name: Варвара Пуговицина
            author_email: varvara@pugovica.ru
            origin: omnibox
            recommended: true
            product_id: 444772
            photos:
              - https://shoppilot-ugc-media.s3.amazonaws.com/media_files/57d8/6f47/8ddf/872b/3a09/ec00/large.jpg?1473802054
            tags:
              - Featured
            custom_attributes:
              region: 66
            location_name: Екатеринбург
            relationships:
              author:
                data:
                  id: d41d8cd98f00b204e9800998ecf8427e
                  type: consumers
              product:
                data:
                  id: 359da16916eebd1cc0a0884b3bad4f6d
                  type: products
              comments: []


  # ---------------------------
  # Comment responses
  # ---------------------------
  CommentCollectionResponse:
    description: Список комментариев
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/definitions/PersistedComment"
        included:
          description: Зависимые объекты, указанные в параметре `include`
          type: array
          items: []

  CommentCreatedResponse:
    description: Комментарий успешно добавлен
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedComment"


  # ---------------------------
  # Question responses
  # ---------------------------
  QuestionCollectionResponse:
    description: Список вопросов
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/definitions/PersistedQuestion"
        included:
          description: Зависимые объекты, указанные в параметре `include`
          type: array
          items: []

  QuestionCreatedResponse:
    description: Вопрос успешно создан
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedQuestion"

  QuestionUpdatedResponse:
    description: Вопрос успешно обновлен
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedQuestion"

  QuestionResponse:
    description: Вопрос
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedQuestion"
        included:
          description: Зависимые объекты, указанные в параметре `include`
          type: array
          items: []

  # ---------------------------
  # Answer responses
  # ---------------------------
  AnswerCollectionResponse:
    description: Список ответов
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/definitions/PersistedAnswer"
        included:
          description: Зависимые объекты, указанные в параметре `include`
          type: array
          items: []

  AnswerCreatedResponse:
    description: Ответ успешно добавлен
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedAnswer"


  # ---------------------------
  # Orders responses
  # ---------------------------
  OrderCreatedResponse:
    description: Заказ успешно создан
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedOrder"

  OrderUpdatedResponse:
    description: Заказ успешно обновлен
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedOrder"

  OrderCollectionResponse:
    description: Список заказов
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/definitions/PersistedOrder"
        included:
          description: Зависимые объекты, указанные в параметре `include`
          type: array
          items: []

  OrderResponse:
    description: Заказ
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedOrder"
        included:
          description: Зависимые объекты, указанные в параметре `include`
          type: array
          items: []


  # ---------------------------
  # Products responses
  # ---------------------------
  ProductUpdatedResponse:
    description: Продукт успешно обновлен
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedProduct"

  ProductCollectionResponse:
    description: Список продуктов
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/definitions/PersistedProduct"
        included:
          description: Зависимые объекты, указанные в параметре `include`
          type: array
          items: []

  ProductResponse:
    description: Продукт
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedProduct"
        included:
          description: Зависимые объекты, указанные в параметре `include`
          type: array
          items: []

  # ---------------------------
  # Consumer responses
  # ---------------------------
  ConsumerCollectionResponse:
    description: Список клиентов
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/definitions/PersistedConsumer"
        included:
          description: Зависимые объекты, указанные в параметре `include`
          type: array
          items: []

  ConsumerCreatedResponse:
    description: Клиент успешно добавлен
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedConsumer"

  ConsumerUpdatedResponse:
    description: Клиенты успешно обновлен
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedConsumer"

  ConsumerResponse:
    description: Клиент
    schema:
      type: object
      properties:
        data:
          $ref: "#/definitions/PersistedConsumer"
        included:
          description: Зависимые объекты, указанные в параметре `include`
          type: array
          items: []

  # ---------------------------
  # SurveyResponse responses
  # ---------------------------
  SurveyResponseCollectionResponse:
    description: Список ответов на опрос
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/definitions/PersistedSurveyResponse"
        included:
          description: Зависимые объекты, указанные в параметре `include`
          type: array
          items: []

parameters:
  sortCollection:
    required: false
    in: query
    name: sort
    type: string
    description: |
      Сортировка результатов.

  pageNumber:
    required: false
    in: query
    name: page
    description: Номер страницы
    type: integer

  perPage:
    required: false
    in: query
    name: per_page
    description: Кол-во результатов на страницу
    type: integer
    maximum: 100

  resourceId:
    required: true
    in: path
    name: id
    description: Внутренний или внешний идентификатор объекта
    type: string

  # ---------------------------
  # Reviews parameters
  # ---------------------------
  filterInReview:
    required: false
    in: query
    name: filter
    type: string
    description: |
      Фильтр результатов. Параметры для фильтрации:

      |    Параметр    |               Операторы               |            Возможные значения            |
      | :------------- | :------------------------------------ | :--------------------------------------- |
      | `context_type` | `eq`, `neq`                           | `store`, `product`, `category`,`brand`,  |
      | `rating`       | `eq`, `gt`, `gte`, `lt`, `lte`, `neq` | `1…5`                                    |
      | `product_id`   | `eq`                                  | __string__                               |
      | `created_at`   | `eq`, `gt`, `gte`, `lt`, `lte`, `neq` | __date-time__                            |
      | `updated_at`   | `eq`, `gt`, `gte`, `lt`, `lte`, `neq` | __date-time__                            |
      | `state`        | `eq`, `neq`                           | `published`, `waiting`, `banned`, `held` |

      Пример: `filter=rating:eq:2,state:eq:published`

  includeInReview:
    required: false
    in: query
    name: include
    description: |
      Массив объектов, которые должны включаться в ответ.
      Значения разделяются запятыми. Пример: `include=product,author`
    type: string
    enum:
      - author
      - product
      - comments

  # ---------------------------
  # Consumers parameters
  # ---------------------------
  filterInConsumer:
    required: false
    in: query
    name: filter
    type: string
    description: |
      Фильтр результатов. Параметры для фильтрации:

      |    Параметр    |               Операторы               | Возможные значения |
      | :------------- | :------------------------------------ | :----------------- |
      | `created_at`   | `eq`, `gt`, `gte`, `lt`, `lte`, `neq` | __date-time__      |
      | `updated_at`   | `eq`, `gt`, `gte`, `lt`, `lte`, `neq` | __date-time__      |
      | `unsubscribed` | `eq`, `neq`                           | __boolean__        |

      Пример: `filter=unsubscribed:eq:true`

  includeInConsumer:
    required: false
    in: query
    name: include
    description: |
      Массив объектов, которые должны включаться в ответ.
      Значения разделяются запятыми. Пример: `include=reviews,questions`
    type: string
    enum:
      - reviews
      - questions
      - orders

  # ---------------------------
  # Comments parameters
  # ---------------------------
  includeInComment:
    required: false
    in: query
    name: include
    description: |
      Массив объектов, которые должны включаться в ответ.
      Значения разделяются запятыми. Пример: `include=author`
    type: string
    enum:
      - author

  # ---------------------------
  # Questions parameters
  # ---------------------------
  filterInQuestion:
    required: false
    in: query
    name: filter
    type: string
    description: |
      Фильтр результатов. Параметры для фильтрации:

      |    Параметр    |               Операторы               |            Возможные значения            |
      | :------------- | :------------------------------------ | :--------------------------------------- |
      | `context_type` | `eq`, `neq`                           | `store`, `product`, `category`,`brand`,  |
      | `product_id`   | `eq`,                                 | __string__                               |
      | `created_at`   | `eq`, `gt`, `gte`, `lt`, `lte`, `neq` | __date-time__                            |
      | `updated_at`   | `eq`, `gt`, `gte`, `lt`, `lte`, `neq` | __date-time__                            |
      | `state`        | `eq`, `neq`                           | `published`, `waiting`, `banned`, `held` |

      Пример: `filter=product_id:eq:256788,state:eq:published`

  includeInQuestion:
    required: false
    in: query
    name: include
    description: |
      Массив объектов, которые должны включаться в ответ.
      Значения разделяются запятыми. Пример: `include=answers`
    type: string
    enum:
      - author
      - product
      - answers

  # ---------------------------
  # Answers parameters
  # ---------------------------
  includeInAnswer:
    required: false
    in: query
    name: include
    description: |
      Массив объектов, которые должны включаться в ответ.
      Значения разделяются запятыми. Пример: `include=author`
    type: string
    enum:
      - author

  # --------------------------
  # Orders parameters
  # --------------------------
  filterInOrder:
    required: false
    in: query
    name: filter
    type: string
    description: |
      Фильтр результатов. Параметры для фильтрации:

      | Параметр     | Операторы                             | Возможные значения                       |
      | :---------   | :----------------------------------   | :---------------------------             |
      | `created_at` | `eq`, `gt`, `gte`, `lt`, `lte`, `neq` | __date-time__                            |
      | `updated_at` | `eq`, `gt`, `gte`, `lt`, `lte`, `neq` | __date-time__                            |

      Пример: `filter=created_at:gte:2016-04-12T23:20:50.52Z`

  includeInOrder:
    required: false
    in: query
    name: include
    description: |
      Массив объектов, которые должны включаться в ответ.
      Значения разделяются запятыми. Пример: `include=product`
    type: string
    enum:
      - product
      - consumer

  # ---------------------------
  # Products parameters
  # ---------------------------
  includeInProduct:
    required: false
    in: query
    name: include
    description: |
      Массив объектов, которые должны включаться в ответ.
      Значения разделяются запятыми. Пример: `include=reviews`
    type: string
    enum:
      - reviews
      - questions
      - brand
      - category

  # ---------------------------
  # Survey responses parameters
  # ---------------------------
  filterInSurveyResponse:
    required: false
    in: query
    name: filter
    type: string
    description: |
      Фильтр результатов. Параметры для фильтрации:

      | Параметр       | Операторы                             | Возможные значения |
      | :------------- | :------------------------------------ | :----------------- |
      | `created_at`   | `eq`, `gt`, `gte`, `lt`, `lte`, `neq` | __date-time__      |
      | `updated_at`   | `eq`, `gt`, `gte`, `lt`, `lte`, `neq` | __date-time__      |
      | `survey_id`    | `eq`, `neq`                           | __string__         |

      Пример: `filter=survey_id:eq:592ee4696dbfd69acd73c0be`

  includeInSurveyResponse:
    required: false
    in: query
    name: include
    description: |
      Массив объектов, которые должны включаться в ответ.
      Значения разделяются запятыми. Пример: `include=answers,author`
    type: string
    enum:
      - answers
      - author


definitions:
  ObjectRef:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
        enum:
          - reviews
          - comments
          - consumers
          - questions
          - answers
          - orders
          - products

  # -------------------------------
  # Consumer definitions
  # -------------------------------
  ConsumerAttributes:
    type: object
    required:
      - email
      - name
    properties:
      external_id:
        type: string
        description: Внешний идентификатор
      email:
        type: string
        description: E-mail
      name:
        type: string
        description: Полное имя
      first_name:
        type: string
        description: Имя
      phone:
        type: string
        description: Номер телефона
      created_at:
        type: string
        format: date-time
        description: Время создания
      updated_at:
        type: string
        format: date-time
        description: Время последнего обновления
      unsubscribed:
        type: boolean
        description: Рекоммендация
      custom_attributes:
        type: object
        description: Произвольный набор атрибутов
      avatar_url:
        type: string
        description: Урл аватара

  Consumer:
    type: object
    required:
      - type
      - attributes
    properties:
      type:
        type: string
        description: Всегда __consumers__
      attributes:
        $ref: "#/definitions/ConsumerAttributes"

  ConsumerRelationships:
    type: object
    description: Зависимости
    properties:
      reviews:
        description: Отзывы
        type: array
        items:
          $ref: "#/definitions/ObjectRef"
      questions:
        description: Вопросы и ответы
        type: array
        items:
          $ref: "#/definitions/ObjectRef"
      orders:
        description: Заказы
        type: array
        items:
          $ref: "#/definitions/ObjectRef"

  PersistedConsumer:
    type: object
    required:
      - id
      - type
      - attributes
    properties:
      id:
        type: string
        description: Идентификатор клиента
      type:
        type: string
        description: Всегда __consumers__
      attributes:
        $ref: "#/definitions/ConsumerAttributes"
      relationships:
        $ref: "#/definitions/ConsumerRelationships"

  # -------------------------------
  # Review definitions
  # -------------------------------
  ReviewAttributes:
    type: object
    required:
      - body
      - rating
    properties:
      external_id:
        type: string
        description: Внешний идентификатор отзыва
      rating:
        type: integer
        description: Рейтинг
        maximum: 5
        minimum: 1
      pros:
        type: string
        description: Преимущества
      cons:
        type: string
        description: Недостатки
      body:
        type: string
        description: Комментарий
      rating_details:
        type: array
        description: Детали рейтинга
        items:
          type: object
          required:
            - name
            - label
            - value
          properties:
            name:
              type: string
              description: Название (лучше по-английски)
            label:
              type: string
              description: Лейбл
            value:
              type: float
              description: Значение
      author_details:
        type: array
        description: Детали автора
        items:
          type: object
          required:
            - name
            - label
            - value
          properties:
            name:
              type: string
              description: Название (лучше по-английски)
            label:
              type: string
              description: Лейбл
            value:
              type: float
              description: Значение
      created_at:
        type: string
        format: date-time
        description: Время создания отзыва
      updated_at:
        type: string
        format: date-time
        description: Время последнего обновления отзыва
      imported_at:
        type: string
        format: date-time
        description: Время импорта отзыва, если через API
      author_name:
        type: string
        description: Имя автора
      author_email:
        type: string
        description: E-mail автора
      origin:
        type: string
        description: Источник отзыва
      state:
        type: string
        description: Статус модерации
        enum:
          - published
          - waiting
          - banned
          - held
        default: waiting
      product_id:
        type: string
        description: Идентификатор продукта, к которому привязан отзыв. Обычно это `offer.id` из YML файла
      photos:
        type: array
        items:
          type: string
        description: Массив URL фотографий прикрепленных к отзыву
      tags:
        type: array
        items:
          type: string
        description: Теги
      recommended:
        type: boolean
        description: Рекоммендация
      custom_attributes:
        type: object
        description: Произвольный набор атрибутов
      location_name:
        type: string
        description: Локация
      likes:
        type: integer
        description: Кол-во голосов, считающих отзыв полезным
      dislikes:
        type: integer
        description: Кол-во голосов, считающих отзыв бесполезным

  Review:
    type: object
    required:
      - type
      - attributes
    properties:
      type:
        type: string
        description: Всегда __reviews__
      attributes:
        $ref: "#/definitions/ReviewAttributes"
    example:
      type: reviews
      attributes:
        pros: Одни преимущества
        cons: Отсутствуют
        body: Спасибо за платье! Отлично держит, приятное к телу, в общем супер! Завтра приеду за еще одним платьем! А может и двумя! Впереди юбилей и очередная свадьба))))) Спасибо большое! Буду заказывать еще обязательно!"
        rating: 5
        external_id: review-34772
        created_at: 2016-04-12T23:20:50.52Z
        updated_at: 2016-04-12T23:20:50.52Z
        author_name: Варвара Пуговицина
        author_email: varvara@pugovica.ru
        origin: omnibox
        recommended: true
        product_id: 444772
        photos:
          - https://shoppilot-ugc-media.s3.amazonaws.com/media_files/57d8/6f47/8ddf/872b/3a09/ec00/large.jpg?1473802054
        tags:
          - Featured
        custom_attributes:
          region: 66
        location_name: Екатеринбург
        rating_details:
          -
            name: durability
            label: Надежность
            value: 4
          -
            name: features
            label: Возможности
            value: 5
        author_details:
          -
            name: age
            label: Возраст
            value: 18-25 лет
          -
            name: expirience
            label: Опыт
            value: Опытная домохозяйка

  ReviewRelationships:
    type: object
    description: Зависимости
    properties:
      author:
        type: object
        description: Автор
        properties:
          data:
            $ref: "#/definitions/ObjectRef"
      product:
        type: object
        description: Продукт
        properties:
          data:
            $ref: "#/definitions/ObjectRef"
      comments:
        description: Комментарии
        type: array
        items:
          $ref: "#/definitions/ObjectRef"


  PersistedReview:
    type: object
    required:
      - id
      - type
      - attributes
    properties:
      id:
        type: string
        description: Идентификатор отзыва
      type:
        type: string
        description: Всегда __reviews__
      attributes:
        allOf:
          - $ref: "#/definitions/ReviewAttributes"
          - type: object
            properties:
              context_type:
                type: string
                description: Контекст отзыва. Определяет тип объкта, к которому привязан отзыв.
                enum:
                - product
                - brand
                - store
                - category
      relationships:
        $ref: "#/definitions/ReviewRelationships"

  # --------------------------
  # Comment definitions
  # --------------------------
  CommentAttributes:
    type: object
    required:
      - text
    properties:
      text:
        type: string
        description: Текст комментария
      author_name:
        type: string
        description: Имя автора
      author_email:
        type: string
        description: Email автора
      state:
        type: string
        description: Статус публикации
        enum:
        - published
        - waiting
        - banned


  PersistedComment:
    type: object
    required:
      - id
      - type
      - attributes
    properties:
      id:
        type: string
        description: Идентификатор комментария
      type:
        type: string
        description: Всегда __comments__
      attributes:
        $ref: "#/definitions/CommentAttributes"

  Comment:
    type: object
    required:
      - type
      - attributes
    properties:
      id:
        type: string
        description: Идентификатор комментария
      type:
        type: string
        description: Всегда __comments__
      attributes:
        $ref: "#/definitions/CommentAttributes"

  # -------------------------------
  # Question definitions
  # -------------------------------
  QuestionAttributes:
    type: object
    required:
      - text
    properties:
      text:
        type: string
        description: Текст вопроса
      external_id:
        type: string
        description: Внешний идентификатор
      author_name:
        type: string
        description: Имя автора
      author_email:
        type: string
        description: E-mail автора
      product_id:
        type: string
        description: Идентификатор продукта, к которому привязан вопрос. Обычно это `offer.id` из YML файла.
      state:
        type: string
        description: Статус модерации
        enum:
          - published
          - waiting
          - banned
        default: waiting
      tags:
        type: array
        items:
          type: string
        description: Теги
      created_at:
        type: string
        format: date-time
        description: Время создания
      updated_at:
        type: string
        format: date-time
        description: Время последнего обновления

  Question:
    type: object
    required:
      - type
      - attributes
    properties:
      type:
        type: string
        description: Всегда __questions__
      attributes:
        $ref: "#/definitions/QuestionAttributes"

  QuestionRelationships:
    type: object
    description: Зависимости
    properties:
      author:
        type: object
        description: Автор
        properties:
          data:
            $ref: "#/definitions/ObjectRef"
      product:
        type: object
        description: Продукт
        properties:
          data:
            $ref: "#/definitions/ObjectRef"
      answers:
        description: Ответы
        type: array
        items:
          $ref: "#/definitions/ObjectRef"


  PersistedQuestion:
    type: object
    required:
      - id
      - type
      - attributes
    properties:
      id:
        type: string
        description: Идентификатор вопроса
      type:
        type: string
        description: Всегда __questions__
      attributes:
        allOf:
          - $ref: "#/definitions/QuestionAttributes"
          - type: object
            properties:
              context_type:
                type: string
                description: Контекст вопроса. Определяет тип объкта, к которому привязан отзыв.
                enum:
                - product
                - brand
                - store
                - category
      relationships:
        $ref: "#/definitions/QuestionRelationships"

  # --------------------------
  # Answer definitions
  # --------------------------
  AnswerAttributes:
    type: object
    required:
      - text
    properties:
      text:
        type: string
        description: Текст ответа
      author_name:
        type: string
        description: Имя автора
      author_email:
        type: string
        description: Email автора
      state:
        type: string
        description: Статус публикации
        enum:
        - published
        - waiting
        - banned


  PersistedAnswer:
    type: object
    required:
      - id
      - type
      - attributes
    properties:
      id:
        type: string
        description: Идентификатор ответа
      type:
        type: string
        description: Всегда __answers__
      attributes:
        $ref: "#/definitions/AnswerAttributes"

  Answer:
    type: object
    required:
      - type
      - attributes
    properties:
      id:
        type: string
        description: Идентификатор ответа
      type:
        type: string
        description: Всегда __answers__
      attributes:
        $ref: "#/definitions/AnswerAttributes"


  # -------------------------------
  # Orer/new definitions
  # -------------------------------
  OrderNewData:
    type: object
    properties:
      token:
        type: string
        description: Токен
      shopments:
        type: array
        description: Список заказов
        items:
          type: object
          properties:
            shipmentId:
              type: string
              description: Идентификатор заказа

  # -------------------------------
  # Orer definitions
  # -------------------------------
  OrderAttributes:
    type: object
    required:
      - consumer_name
      - consumer_email
      - order_lines
    properties:
      number:
        type: string
        description: Уникальный номер или внешний идентификатор заказа
      details:
        type: object
        description: Произвольные атрибуты заказа
      consumer_name:
        type: string
        description: Имя клиента
      consumer_email:
        type: string
        description: Email клиента
      consumer_phone:
        type: string
        description: Телефон клиента
      order_lines:
        type: array
        description: Корзина заказа
        items:
          type: object
          required:
            - product_id
          properties:
            product_id:
              type: string
              description: Идентифкатор товара
            name:
              type: string
              description: Название товара
            price:
              type: float
              description: Цена покупки
      created_at:
        type: string
        format: date-time
        description: Время создания
      updated_at:
        type: string
        format: date-time
        description: Время создания


  Order:
    type: object
    required:
      - type
      - attributes
    properties:
      shipments:
        type: string
        description: Список заказоа
      type:
        type: string
        description: Всегда __orders__
      attributes:
        $ref: "#/definitions/OrderAttributes"
    example:
      shipments:
        - qwe: 56
      type: orders
      attributes:
        number: order-number-1386
        details:
          payment_status: not-paid
          fullfilment_status: packed
          region: 74
        order_lines:
          - product_id: 45
            name: Ботинки ECCO 69
            price: 6800

  PersistedOrder:
    type: object
    required:
      - id
      - type
      - attributes
    properties:
      id:
        type: string
        description: Идентифкатор заказа
      type:
        type: string
        description: Всегда __orders__
      attributes:
        $ref: "#/definitions/OrderAttributes"
      relationships:
        $ref: "#/definitions/OrderRelationships"

  OrderRelationships:
    type: object
    description: Зависимости
    properties:
      consumer:
        type: object
        description: Клиент
        properties:
          data:
            $ref: "#/definitions/ObjectRef"
      product:
        type: object
        description: Коллекция продуктов
        properties:
          data:
            type: array
            items:
              $ref: "#/definitions/ObjectRef"



  # -------------------------------
  # Product definitions
  # -------------------------------
  ProductAttributes:
    type: object
    required:
      - name
      - external_id
    properties:
      external_id:
        type: string
        description: Внешний идентификатор
      group_id:
        type: string
        description: Внешний идентификатор группы
      rating:
        type: number
        description: Рейтинг
        maximum: 5
        minimum: 1
      name:
        type: string
        description: Название
      url:
        type: string
        description: URL карточки товара
      description:
        type: string
        description: Описание
      picture_urls:
        type: array
        description: Массив изображений
        items:
          type: string
      price:
        type: number
        description: Цена
      available:
        type: boolean
        description: Наличие
      related_external_ids:
        type: array
        description: Массив из `external_id` рекоммендуемых товаров
        items:
          type: string
      created_at:
        type: string
        format: date-time
        description: Время создания
      updated_at:
        type: string
        format: date-time
        description: Время последнего обновления
      reviews_count:
        type: integer
        description: Кол-во отзывов
      qurestions_count:
        type: integer
        description: Кол-во вопросов
      recommended:
        type: float
        description: Процент рекоммендующих
      custom_attributes:
        type: object
        description: Произвольные аттрибуты (только один уровень вложенности)

  Product:
    type: object
    required:
      - type
      - attributes
    properties:
      type:
        type: string
        description: Всегда __products__
      attributes:
        $ref: "#/definitions/ProductAttributes"

  ProductRelationships:
    type: object
    description: Зависимости
    properties:
      reviews:
        description: Отзывы
        type: array
        items:
          $ref: "#/definitions/ObjectRef"
      questions:
        description: Вопросы
        type: array
        items:
          $ref: "#/definitions/ObjectRef"
      brand:
        type: object
        description: Бренд
        properties:
          data:
            $ref: "#/definitions/ObjectRef"
      category:
        type: object
        description: Категория
        properties:
          data:
            $ref: "#/definitions/ObjectRef"

  PersistedProduct:
    type: object
    required:
      - id
      - type
      - attributes
    properties:
      id:
        type: string
        description: Идентификатор продукта
      type:
        type: string
        description: Всегда __products__
      attributes:
        $ref: "#/definitions/ProductAttributes"
      relationships:
        $ref: "#/definitions/ProductRelationships"

  # --------------------------
  # SurveyResponse definitions
  # --------------------------
  SurveyResponseAttributes:
    type: object
    required:
      - survey_id
    properties:
      survey_id:
        type: string
        description: Идентификатор опроса
      location_name:
        type: string
        description: Локация
      order_number:
        type: string
        description: Номер заказа
      created_at:
        type: string
        format: date-time
        description: Время создания
      updated_at:
        type: string
        format: date-time
        description: Время последнего обновления

  SurveyResponseRelationships:
    type: object
    description: Зависимости
    properties:
      author:
        type: object
        description: Автор
        properties:
          data:
            $ref: "#/definitions/ObjectRef"
      answers:
        type: object
        description: Ответы
        properties:
          data:
            $ref: "#/definitions/ObjectRef"

  PersistedSurveyResponse:
    type: object
    required:
      - id
      - type
      - attributes
    properties:
      id:
        type: string
        description: Идентификатор ответа на опрос
      type:
        type: string
        description: Всегда __survey_responses__
      attributes:
        $ref: "#/definitions/SurveyResponseAttributes"
      relationships:
        $ref: "#/definitions/SurveyResponseRelationships"

  SurveyResponse:
    type: object
    required:
      - type
      - attributes
    properties:
      id:
        type: string
        description: Идентификатор ответа на опрос
      type:
        type: string
        description: Всегда __survey_responses__
      attributes:
        $ref: "#/definitions/SurveyResponseAttributes"


  # --------------------------
  # SurveyAnswer definitions
  # --------------------------
  SurveyAnswerAttributes:
    type: object
    required:
      - question_id
    properties:
      value:
        type: string
        description: Ответ
      value_type:
        type: string
        description: Тип ответа
        enum:
          - string
          - number
      question_id:
        type: string
        description: Идентификатор вопроса
      question_type:
        type: string
        description: Тип вопроса
        enum:
          - text_question
          - linear_scale_question

  SurveyAnswerRelationships:
    type: object
    description: Зависимости
    properties:
      response:
        type: object
        description: Ответ на опрос
        properties:
          data:
            $ref: "#/definitions/ObjectRef"

  PersistedSurveyAnswer:
    type: object
    required:
      - id
      - type
      - attributes
    properties:
      id:
        type: string
        description: Идентификатор ответа на вопрос
      type:
        type: string
        description: Всегда __survey_answers__
      attributes:
        $ref: "#/definitions/SurveyAnswerAttributes"
      relationships:
        $ref: "#/definitions/SurveyAnswerRelationships"

  SurveyAnswer:
    type: object
    required:
      - type
      - attributes
    properties:
      id:
        type: string
        description: Идентификатор ответа на вопрос
      type:
        type: string
        description: Всегда __survey_answers__
      attributes:
        $ref: "#/definitions/SurveyAnswerAttributes"


  Error:
    type: object
    properties:
      status:
        type: string
      title:
        type: string
      details:
        type: array
        items:
          type: string
